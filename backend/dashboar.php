<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>–ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞</title>
    <style>
    :root {
        --bg: #0f0a1a;
        --card-bg: #1e122f;
        --text: #f8f7fa;
        --accent: #8b5cf6;
        --accent-dark: #6d28d9;
        --warning: #ef4444;
        --success: #10b981;
        --border: #3e2a5c;
    }

    body {
        background: var(--bg);
        color: var(--text);
        font-family: 'Segoe UI', sans-serif;
        padding: 1.5rem;
        margin: 0;
        min-height: 100vh;
    }

    h1 {
        text-align: center;
        margin: 1.5rem 0 2.5rem;
        font-size: 2.2rem;
        color: var(--accent);
        letter-spacing: -0.03em;
    }

    .grid {
        display: flex;
        flex-wrap: wrap;
        gap: 1.2rem;
        max-width: 1600px;
        margin: 0 auto;
        justify-content: center;
    }

    .card {
        background: var(--card-bg);
        border: 1px solid var(--border);
        border-radius: 10px;
        padding: 1rem;
        flex: 1 1 260px;
        max-width: 360px;
        min-height: 120px;
        transition: transform 0.2s, box-shadow 0.2s;
        display: flex;
        flex-direction: column;
        position: relative;
    }

    .card:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 15px rgba(139, 92, 246, 0.1);
    }

    .card-header {
        display: flex;
        align-items: center;
        gap: 0.8rem;
        margin-bottom: 1rem;
        padding-bottom: 0.8rem;
        border-bottom: 1px solid var(--border);
    }

    .card-header i {
        font-size: 1.4rem;
        color: var(--accent);
    }

    .card-header h3 {
        margin: 0;
        font-size: 1.1rem;
        font-weight: 600;
    }

    .value {
        font-size: 1.8rem;
        font-weight: 700;
        margin: 0.3rem 0;
        color: var(--accent);
        line-height: 1;
    }

    .unit {
        font-size: 0.85rem;
        color: #a78bfa;
        margin-top: auto;
        opacity: 0.8;
    }

    .list {
        list-style: none;
        padding: 0;
        margin: 0;
        flex: 1;
        max-height: 200px;
        overflow-y: auto;
        scrollbar-width: thin;
        scrollbar-color: var(--accent) var(--border);
    }

    .list::-webkit-scrollbar {
        width: 5px;
    }

    .list::-webkit-scrollbar-track {
        background: var(--border);
        border-radius: 2px;
    }

    .list::-webkit-scrollbar-thumb {
        background: var(--accent);
        border-radius: 2px;
    }

    .list-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.6rem 0;
        border-bottom: 1px solid var(--border);
        font-size: 0.9rem;
    }
    .list-item .t{
        width: 200px;
    }

    .list-item:last-child {
        border-bottom: none;
    }

    .progress {
        height: 6px;
        background: var(--border);
        border-radius: 3px;
        overflow: hidden;
        margin: 1rem 0 0.5rem;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, var(--accent), var(--accent-dark));
        transition: width 0.5s ease;
    }

    .badge {
        display: inline-block;
    padding: 0.3rem 0.8rem;
    border-radius: 15px;
    font-size: 11px;
    font-weight: 500;
    width: 28px;
    background: var(--border);
    color: var(--accent);
    margin-right: 10px;
    }
    #bad{
        width: 40px;
    }
    .badge.stock {
        background: var(--warning);
        color: white;
    }

    @media (max-width: 768px) {
        body {
            padding: 1rem;
        }

        h1 {
            font-size: 1.8rem;
            margin: 1rem 0 2rem;
        }

        .card {
            flex: 1 1 100%;
            max-width: 100%;
            min-height: 100px;
        }

        .value {
            font-size: 1.6rem;
        }
    }

    @media (max-width: 480px) {
        .card-header h3 {
            font-size: 1rem;
        }

        .list-item {
            font-size: 0.85rem;
            padding: 0.5rem 0;
        }

        .badge {
            padding: 0.2rem 0.6rem;
        }
    }

    .preloader {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: var(--bg);
        z-index: 9999;
        display: flex;
        justify-content: center;
        align-items: center;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
    }

    .preloader.active {
        opacity: 1;
        visibility: visible;
    }

    .preloader-content {
        text-align: center;
        max-width: 260px;
        padding: 15px;
    }

    .preloader-text {
        color: var(--accent);
        margin-top: 0.8rem;
        font-size: 1rem;
    }
</style>
</head>
<body>
<div class="preloader" id="preloader">
        <div class="preloader-content">
            <div class="tenor-gif-embed" 
                 data-postid="15026582" 
                 data-share-method="host" 
                 data-aspect-ratio="1" 
                 data-width="100%">
            </div>
            <p class="preloader-text">–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...</p>
        </div>
    </div>
    <h1>üìä –ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞</h1>
    <div class="grid" id="statsGrid"></div>

    <script>
   const preloader = document.getElementById('preloader');
        let isInitialLoad = true;
        let preloaderTimeout;

        async function fetchStats(initialLoad = false) {
            try {
                if (initialLoad) {
                    preloader.classList.add('active');
                    preloaderTimeout = setTimeout(() => {
                        preloader.classList.remove('active');
                    }, 5000);
                }

                const response = await fetch('ajax/get_stats.php');
                const data = await response.json();
                renderStats(data);

            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
            } finally {
                if (initialLoad) {
                    clearTimeout(preloaderTimeout);
                    preloader.classList.remove('active');
                    isInitialLoad = false;
                }
            }
        }

        // –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —Å –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–æ–º
        fetchStats(true);
        
        // –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑ –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞
        setInterval(() => fetchStats(false), 5000);
        const format = {
            number: (num) => new Intl.NumberFormat('ru-RU').format(num || 0),
            currency: (num) => new Intl.NumberFormat('ru-RU', { 
                style: 'currency', 
                currency: 'RUB' 
            }).format(num).replace('RUB', '‚ÇΩ'),
            date: (dateStr) => new Date(dateStr).toLocaleString('ru-RU', {
                day: 'numeric',
                month: 'short',
                hour: '2-digit',
                minute: '2-digit'
            })
        };

      

        function renderStats(data) {
            const grid = document.getElementById('statsGrid');
            grid.innerHTML = '';

            // –ë–ª–æ–∫ 1: –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üë•</i>
                        <h3>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
                    </div>
                    <div class="value">${format.number(data.total_users)}</div>
                    <span class="unit">–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ</span>
                </div>
            `;

            // –ë–ª–æ–∫ 2: –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (24—á)
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üë§</i>
                        <h3>–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h3>
                    </div>
                    <div class="value">${format.number(data.new_users_24h)}</div>
                    <span class="unit">–∑–∞ 24 —á–∞—Å–∞</span>
                </div>
            `;

            // –ë–ª–æ–∫ 3: –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üü¢</i>
                        <h3>–û–Ω–ª–∞–π–Ω —Å–µ–π—á–∞—Å</h3>
                    </div>
                    <div class="value">${format.number(data.active_users)}</div>
                    <span class="unit">–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π</span>
                </div>
            `;

            // –ë–ª–æ–∫ 4: –¢–æ–ø –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏ (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π)
            grid.innerHTML += `
                <div class="card list-card">
                    <div class="card-header">
                        <i>üèÜ</i>
                        <h3>–¢–æ–ø –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏</h3>
                    </div>
                    <ul class="list">
                        ${data.top_users.map(user => `
                            <li class="list-item">
                                <span>${user.name}</span>
                                <span>${format.currency(user.total)}</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `;

            // –ë–ª–æ–∫ 4: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ –∑–∞–∫–∞–∑–æ–≤
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üì≠</i>
                        <h3>–ë–µ–∑ –∑–∞–∫–∞–∑–æ–≤</h3>
                    </div>
                    <div class="value">${format.number(data.users_no_orders)}</div>
                    <span class="unit">–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</span>
                </div>
            `;
            // –ë–ª–æ–∫ 5: –¢–æ–≤–∞—Ä—ã —Å –Ω–∏–∑–∫–∏–º –∑–∞–ø–∞—Å–æ–º
            grid.innerHTML += `
                <div class="card">
    <div class="card-header">
        <i>‚ö†Ô∏è</i>
        <h3>–ù–∏–∑–∫–∏–π –∑–∞–ø–∞—Å</h3>
    </div>
    <ul class="list">
        ${data.low_stock.map(item => `
            <li class="list-item">
                <span class="t">${item.name}</span>
                <span class="badge">${item.stock_quantity} —à—Ç.</span>
            </li>
        `).join('')}
    </ul>
    <span class="unit">–¢–æ–≤–∞—Ä—ã —Å –æ—Å—Ç–∞—Ç–∫–æ–º –º–µ–Ω–µ–µ 10</span>
</div>
            `;

            // –ë–ª–æ–∫ 6: –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üí∞</i>
                        <h3>–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞</h3>
                    </div>
                    <div class="value">${format.currency(data.avg_price)}</div>
                    <span class="unit">–ø–æ –≤—Å–µ–º —Ç–æ–≤–∞—Ä–∞–º</span>
                </div>
            `;

            // –ë–ª–æ–∫ 7: –¢–æ–ø-3 —Å–∫–∏–¥–∫–∏
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üéÅ</i>
                        <h3>–ú–∞–∫—Å. —Å–∫–∏–¥–∫–∏</h3>
                    </div>
                    <ul class="list">
                        ${data.top_discounts.map(item => `
                            <li class="list-item">
                                <span>${item.name}</span>
                                <span class="badge" id="bad">-${item.discount}%</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `;

            // –ë–ª–æ–∫ 8: –ù–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üÜï</i>
                        <h3>–ù–æ–≤—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è</h3>
                    </div>
                    <ul class="list">
                        ${data.new_products.map(product => `
                            <li class="list-item">
                                <span>${product}</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `;

            // –ë–ª–æ–∫ 9: –°—Ä–µ–¥–Ω–∏–π —á–µ–∫
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üßæ</i>
                        <h3>–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</h3>
                    </div>
                    <div class="value">${format.currency(data.avg_order)}</div>
                    <span class="unit">–ø–æ –≤—Å–µ–º –∑–∞–∫–∞–∑–∞–º</span>
                </div>
            `;

            // –ë–ª–æ–∫ 10: –ó–∞–∫–∞–∑—ã —Å–µ–≥–æ–¥–Ω—è
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üì¶</i>
                        <h3>–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –∑–∞–∫–∞–∑—ã</h3>
                    </div>
                    <div class="value">${format.number(data.today_orders)}</div>
                    <span class="unit">–∑–∞ 24 —á–∞—Å–∞</span>
                </div>
            `;

            // –ë–ª–æ–∫ 11: –ú–∞–∫—Å. –∑–∞–∫–∞–∑
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üíé</i>
                        <h3>–ú–∞–∫—Å. –∑–∞–∫–∞–∑</h3>
                    </div>
                    <div class="value">${format.currency(data.max_order)}</div>
                    <span class="unit">—Å–∞–º—ã–π –¥–æ—Ä–æ–≥–æ–π</span>
                </div>
            `;

            // –ë–ª–æ–∫ 12: –í–æ–∑–≤—Ä–∞—Ç—ã
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>‚Ü©Ô∏è</i>
                        <h3>–í–æ–∑–≤—Ä–∞—Ç—ã</h3>
                    </div>
                    <div class="value">${format.number(data.returns)}</div>
                    <span class="unit">–≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ</span>
                </div>
            `;

            // –ë–ª–æ–∫ 13: –í—ã—Ä—É—á–∫–∞ –∑–∞ –º–µ—Å—è—Ü
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üìÜ</i>
                        <h3>–í—ã—Ä—É—á–∫–∞ –∑–∞ –º–µ—Å—è—Ü</h3>
                    </div>
                    <div class="value">${format.currency(data.month_revenue)}</div>
                    <div class="progress">
                        <div class="progress-fill" style="width: 100%"></div>
                    </div>
                </div>
            `;

            // –ë–ª–æ–∫ 14: –¢–æ–ø —Ç–æ–≤–∞—Ä—ã
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üöÄ</i>
                        <h3>–¢–æ–ø –ø—Ä–æ–¥–∞–∂–∏</h3>
                    </div>
                    <ul class="list">
                        ${data.top_products.map(item => `
                            <li class="list-item">
                                <span>${item.name}</span>
                                <span>${format.currency(item.revenue)}</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `;

            // –ë–ª–æ–∫ 15: –°—É–º–º–∞ —Å–∫–∏–¥–æ–∫
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üé´</i>
                        <h3>–°—É–º–º–∞ —Å–∫–∏–¥–æ–∫</h3>
                    </div>
                    <div class="value">${format.currency(data.total_discounts)}</div>
                    <span class="unit">–≤—Å–µ–≥–æ —Å—ç–∫–æ–Ω–æ–º–∏–ª–∏</span>
                </div>
            `;

            // –ë–ª–æ–∫ 16: –ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>‚è≥</i>
                        <h3>–ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ</h3>
                    </div>
                    <div class="value">${format.number(data.unpaid_orders)}</div>
                    <span class="unit">–Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã</span>
                </div>
            `;

            // –ë–ª–æ–∫ 17: –¢–æ–ø –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>‚ù§Ô∏è</i>
                        <h3>–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ</h3>
                    </div>
                    <ul class="list">
                        ${data.top_favorites.map(item => `
                            <li class="list-item">
                                <span>${item.name}</span>
                                <span>${item.fav_count} ‚ù§Ô∏è</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `;

            // –ë–ª–æ–∫ 18: –°—Ä–∞–≤–Ω–µ–Ω–∏—è
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>‚öñÔ∏è</i>
                        <h3>–°—Ä–∞–≤–Ω–µ–Ω–∏—è</h3>
                    </div>
                    <div class="value">${format.number(data.comparisons)}</div>
                    <span class="unit">–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤</span>
                </div>
            `;

            // –ë–ª–æ–∫ 19: –ö–æ—Ä–∑–∏–Ω—ã
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üõí</i>
                        <h3>–ö–æ—Ä–∑–∏–Ω—ã</h3>
                    </div>
                    <div class="value">${format.number(data.active_carts)}</div>
                    <span class="unit">—Å —Ç–æ–≤–∞—Ä–∞–º–∏</span>
                </div>
            `;

            // –ë–ª–æ–∫ 20: –õ–æ–≥–∏
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üìù</i>
                        <h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
                    </div>
                    <ul class="list">
                        ${data.recent_logs.map(log => `
                            <li class="list-item">
                                <span>${log.action_description}</span>
                                <span class="unit">${format.date(log.created_at)}</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `;

            // –ë–ª–æ–∫ 21: –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üéâ</i>
                        <h3>–ê–∫—Ç–∏–≤–Ω—ã–µ –∞–∫—Ü–∏–∏</h3>
                    </div>
                    <ul class="list">
                        ${data.active_promos.map(promo => `
                            <li class="list-item">
                                <span>${promo}</span>
                                <span class="badge" id="bad">–ê–∫—Ç–∏–≤–Ω–æ</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `;

            // –ë–ª–æ–∫ 22: –¢–æ–ø —Ä–µ–π—Ç–∏–Ω–≥
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>‚≠ê</i>
                        <h3>–õ—É—á—à–∏–µ –æ—Ü–µ–Ω–∫–∏</h3>
                    </div>
                    <ul class="list">
                        ${data.top_rated.map(item => `
                            <li class="list-item">
                                <span>${item.name}</span>
                                <span>${item.avg_rating.toFixed(1)}/5</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `;

            // –ë–ª–æ–∫ 23: –û—Ç–∑—ã–≤—ã –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
            grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üïµÔ∏è</i>
                        <h3>–û—Ç–∑—ã–≤—ã</h3>
                    </div>
                    <div class="value">${format.number(data.pending_reviews)}</div>
                    <span class="unit">–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ</span>
                </div>
            `;
// –ë–ª–æ–∫ 24: –ö–æ–Ω–≤–µ—Ä—Å–∏—è
grid.innerHTML += `
                <div class="card">
                    <div class="card-header">
                        <i>üìà</i>
                        <h3>–ö–æ–Ω–≤–µ—Ä—Å–∏—è</h3>
                    </div>
                    <div class="value">${(data.conversion || 0).toFixed(1)}%</div>
                    <div class="progress">
                        <div class="progress-fill" 
                             style="width: ${Math.min(data.conversion || 0, 100)}%">
                        </div>
                    </div>
                </div>
            `;
        }

        setInterval(fetchStats, 5000);
        // clearInterval(updateInterval);
        fetchStats();
    </script>
     <script type="text/javascript" async src="https://tenor.com/embed.js"></script>
</body>
</html>